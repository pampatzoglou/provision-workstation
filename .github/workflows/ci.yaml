name: CI
on:
  pull_request:
  push:
    branches:
    - '**'
  schedule:
    - cron: "30 5 * * 0"

jobs:
  lint:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python 3.
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install test dependencies.
      run: pip3 install yamllint
    - name: Lint code.
      run: |
        yamllint .
    - name: Run ansible-lint
      uses: ansible/ansible-lint-action@main

  molecule-install-test:
    runs-on: ubuntu-latest
    #needs: lint
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        roles:
          - argo
          - firewall

    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Set up Python 3.
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - uses: actions/cache@v3
      id: cache
      with:
        path: ${{ matrix.roles }}
        key: ${{ runner.os }}-${{ hashFiles(format('{0}', matrix.roles)) }}
        restore-keys: |
            ${{ runner.os }}-
    - uses: gofrolist/molecule-action@v2
      if: steps.cache.outputs.cache-hit != 'true'
      timeout-minutes: 20
      with:
        molecule_command: test --destroy=never
        molecule_working_dir: ${{ matrix.roles }}
      env:
        ANSIBLE_FORCE_COLOR: '1'
