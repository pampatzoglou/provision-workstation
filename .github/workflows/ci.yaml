name: CI
on:
  pull_request:
  push:
    branches:
    - '**'
  schedule:
    - cron: "30 5 * * 0"

jobs:
  lint:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python 3.
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install test dependencies.
      run: pip3 install yamllint
    - name: Lint code.
      run: |
        yamllint .
    - name: Run ansible-lint
      uses: ansible/ansible-lint-action@main

  molecule-install-test:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        roles:
          - argo
          - aws
          - azure
          - brave
          - cmctl
          - copper
          - display_link
          - docker
          - doctl
          # - falco
          - firewall
          - gcp
          - git
          - github
          - helm
          - k6s
          - keepassxc
          - kind
          # - kube_bench
          # - kube_hunter
          # - kube_linter
          - kubectl
          # - kubesquash
          - logcli
          - open_lens
          # - open_policy_agent
          # - pcloud
          - stern
          - syncthing
          - teleport
          - telepresence
          - terraform
          - tilt
          - velero
          - vscode
          - wireguard
          - zsh

    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - uses: actions/cache@v3
      id: cache
      with:
        path: ${{ matrix.roles }}
        key: ${{ runner.os }}-${{ hashFiles(format('{0}', matrix.roles)) }}
        restore-keys: |
            ${{ runner.os }}-
    - name: Set up Python 3.
      if: |
        (steps.cache.outputs.cache-hit != 'true') ||
        (github.event_name == 'pull_request' && github.base_ref == 'main') ||
        (github.event_name == 'push' && github.ref == 'refs/heads/main')
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - uses: gofrolist/molecule-action@v2
      id: molecule
      if: |
        (steps.cache.outputs.cache-hit != 'true') ||
        (github.event_name == 'pull_request' && github.base_ref == 'main') ||
        (github.event_name == 'push' && github.ref == 'refs/heads/main')
      timeout-minutes: 20
      with:
        molecule_command: test --destroy=never
        molecule_working_dir: ${{ matrix.roles }}
      env:
        ANSIBLE_FORCE_COLOR: '1'
    # todo: Try and block POST cache job

    #- name: Setup tmate session
    #  if: ${{ failure() }}
    #  uses: mxschmitt/action-tmate@v3
    #  timeout-minutes: 5