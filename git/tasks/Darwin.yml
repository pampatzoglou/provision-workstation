---
# tasks file for git
- name: Install git
  community.general.homebrew:
    name: git
    state: present
    update_homebrew: true

- name: Install trufflehog
  community.general.homebrew:
    name: trufflehog
    state: present
    update_homebrew: true

- name: Install git-secrets
  community.general.homebrew:
    name: git-secrets
    state: present
    update_homebrew: true

- name: Setup global gitIgnore
  ansible.builtin.blockinfile:
    path: /Users/{{ user }}/.gitignore
    create: true
    owner: '{{ user }}'
    mode: a+x
    block: |
      Thumbs.db
      .DS_Store
      .vscode
      .idea
      .env
      *.env

- name: Setup global git pre-commit hook
  ansible.builtin.blockinfile:
    path: /home/{{ user }}/.githooks/pre-commit
    create: true
    owner: '{{ user }}'
    mode: a+x
    block: |
      #!/usr/bin/env bash

      if git commit -v --dry-run | grep '!nocommit' >/dev/null 2>&1
      then
        echo "Trying to commit non-committable code."
        echo "Remove the !nocommit string and try again."
        exit 1
      else
        # Run local pre-commit hook if exists
        if [ -e ./.git/hooks/pre-commit ]; then
          ./.git/hooks/pre-commit "$@"
        else
          exit 0
        fi
      fi

      if git rev-parse --verify HEAD >/dev/null 2>&1
      then
        against=HEAD
      else
        # Initial commit: diff against an empty tree object
        against=$(git hash-object -t tree /dev/null)
      fi

      # Redirect output to stderr.
      exec 1>&2

      gittyleaks --no-banner --verbose

      git secrets --pre_commit_hook -- "$@"

      trufflehog git file://. --since-commit HEAD --only-verified --fail
      trufflehog filesystem --directory=. --fail

- name: Setting Up global Git
  ansible.builtin.blockinfile:
    path: /Users/{{ user }}/.gitconfig
    create: true
    owner: '{{ user }}'
    mode: a+x
    block: |
      [user]
          name = {{ user }}
      [core]
          hooksPath = /Users/{{ user }}/.githooks
          excludesfile = /Users/{{ user }}/.gitignore
      [safe]
        directory = /github/workspace
