---
# tasks file for git
- name: Run the equivalent of "apt-get update" as a separate step
  ansible.builtin.apt:
    update_cache: true
  become: true

- name: Get packages needed for git
  ansible.builtin.apt:
    pkg:
      - git
  become: true

- name: Setup global gitIgnore
  ansible.builtin.blockinfile:
    path: /home/{{ user }}/.gitconfig/.gitignore
    create: true
    group: '{{ user }}'
    owner: '{{ user }}'
    mode: a+x
    block: |
      Thumbs.db
      .DS_Store
      .vscode
      .idea
      .env
      *.env

- name: Setup global git pre-commit hook
  ansible.builtin.blockinfile:
    path: /home/{{ user }}/.githooks/pre-commit
    create: true
    group: '{{ user }}'
    owner: '{{ user }}'
    mode: a+x
    block: |
      if git commit -v --dry-run | grep '!nocommit' >/dev/null 2>&1
      then
        echo "Trying to commit non-committable code."
        echo "Remove the !nocommit string and try again."
        exit 1
      else
        # Run local pre-commit hook if exists
        if [ -e ./.git/hooks/pre-commit ]; then
          ./.git/hooks/pre-commit "$@"
        else
          exit 0
        fi
      fi

      gittyleaks

- name: Setting Up global Git
  ansible.builtin.blockinfile:
    path: /home/{{ user }}/.gitconfig
    create: true
    group: '{{ user }}'
    owner: '{{ user }}'
    mode: a+x
    block: |
      [user]
          name = {{ user }}
      [core]
          hooksPath = /home/{{ user }}/.githooks
          excludesfile = /home/{{ user }}/.gitignore
      [safe]
        directory = /github/workspace
