---
# tasks file for git
- name: Run the equivalent of "apt-get update" as a separate step
  ansible.builtin.apt:
    update_cache: true
  become: true

- name: Get packages needed for git
  ansible.builtin.apt:
    pkg:
      - git
  become: true

- name: Create gitConfig directory (.git)
  ansible.builtin.file:
    path: /home/{{ user }}/.git
    state: directory
    group: '{{ user }}'
    owner: '{{ user }}'
    mode: '0755'

- name: Setup global gitIgnore
  ansible.builtin.blockinfile:
    path: /home/{{ user }}/.git/.gitignore
    create: true
    group: '{{ user }}'
    owner: '{{ user }}'
    mode: a+x
    block: |
      Thumbs.db
      .DS_Store
      .vscode
      .idea
      .env
      *.env

- name: Setup global git pre-commit hook
  ansible.builtin.blockinfile:
    path: /home/{{ user }}/.git/hooks/pre-commit
    create: true
    group: '{{ user }}'
    owner: '{{ user }}'
    mode: a+x
    block: |
      #!/usr/bin/env bash

      if git commit -v --dry-run | grep '!nocommit' >/dev/null 2>&1
      then
        echo "Trying to commit non-committable code."
        echo "Remove the !nocommit string and try again."
        exit 1
      else
        # Run local pre-commit hook if exists
        if [ -e ./.git/hooks/pre-commit ]; then
          ./.git/hooks/pre-commit "$@"
        else
          exit 0
        fi
      fi

      if git rev-parse --verify HEAD >/dev/null 2>&1
      then
        against=HEAD
      else
        # Initial commit: diff against an empty tree object
        against=$(git hash-object -t tree /dev/null)
      fi

      # Redirect output to stderr.
      exec 1>&2

      gittyleaks --no-banner --verbose

      git secrets --pre_commit_hook -- "$@"

      trufflehog git file://. --since-commit HEAD --only-verified --fail
      trufflehog filesystem --directory=. --fail

- name: Check if /home/{{ user }}/.gitconfig exists
  ansible.builtin.stat:
    path: /home/{{ user }}/.gitconfig
  register: gitconfig_installed

- name: Setting Up global Git
  ansible.builtin.blockinfile:
    path: /home/{{ user }}/.gitconfig
    create: true
    group: '{{ user }}'
    owner: '{{ user }}'
    mode: a+x
    block: |
      [user]
          name = {{ user }}
          email = you@example.com
      [core]
          hooksPath = /home/{{ user }}/.git/hooks
          excludesfile = /home/{{ user }}/.git/.gitignore
      [safe]
        directory = /github/workspace
  when: not gitconfig_installed.stat.exists

- name: Display config message
  debug:
    msg: "You will need to edit: /home/{{ user }}/.gitconfig and setup your default git email"
    verbosity: 0
  when: not gitconfig_installed.stat.exists

- name: Check if trufflehog is installed
  ansible.builtin.stat:
    path: /usr/local/bin/trufflehog
  register: trufflehog_installed

- name: Create temporary build directory
  ansible.builtin.tempfile:
    state: directory
    suffix: temp_trufflehog
  register: temp_dir
  when: not trufflehog_installed.stat.exists

- name: Download trufflehog (sha)
  ansible.builtin.get_url:
    url: >
      https://github.com/trufflesecurity/trufflehog/releases/download/
      v{{ trufflehog.version }}/trufflehog_{{ trufflehog.version }}_linux_amd64.tar.gz'
    dest: '{{ temp_dir.path }}'
    checksum: 'sha256:{{ trufflehog.sha }}'
    mode: '0744'
  when: not trufflehog_installed.stat.exists

- name: Unarchive trufflehog
  ansible.builtin.unarchive:
    src: '{{ temp_dir.path }}/trufflehog_{{ trufflehog.version }}_linux_amd64.tar.gz'
    dest: '{{ temp_dir.path }}'
    remote_src: true
  when: not trufflehog_installed.stat.exists

- name: Install trufflehog
  ansible.builtin.copy:
    src: '{{ temp_dir.path }}/trufflehog'
    dest: /usr/local/bin/trufflehog
    owner: root
    group: root
    mode: a+x
  become: true
  when: not trufflehog_installed.stat.exists

- name: Remove the temporary dir
  ansible.builtin.file:
    path: '{{ temp_dir.path }}'
    state: absent
  when: temp_dir.path is defined

- name: Install git-secrets
  ansible.builtin.apt:
    name: git-secrets
    state: latest
    update_cache: true
  become: true
